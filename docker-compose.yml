services:
  backend:
    build: .
    ports:
      - "8080:8080"
    environment:
      - PORT=${PORT}
      - DB_TYPE=${DB_TYPE}
      - DB_PATH=${DB_PATH}
      - JWT_SECRET=${JWT_SECRET}
      - MCP_API_KEY=${MCP_API_KEY}
      - LLM_API_KEY=${LLM_API_KEY}
      - LLM_BASE_URL=${LLM_BASE_URL}
      - LLM_MODEL=${LLM_MODEL}
      - GO_ENV=${GO_ENV}
    volumes:
      - ./data:/app/data
    networks:
      - quilldeck-network
    env_file:
      - .env

  frontend:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV}
    volumes:
      - ./web:/app
    command: sh -c "npm install && npm run dev"
    networks:
      - quilldeck-network
    depends_on:
      - backend
    env_file:
      - .env

  database:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - quilldeck-network
    env_file:
      - .env

volumes:
  postgres_data:

networks:
  quilldeck-network:
    driver: bridge